# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional

from azure.mgmt.core import ARMPipelineClient
from msrest import Deserializer, Serializer

from ._configuration import MonitorClientConfiguration
from .operations import AutoscaleSettingsOperations
from .operations import Operations
from .operations import AlertRuleIncidentsOperations
from .operations import AlertRulesOperations
from .operations import LogProfilesOperations
from .operations import DiagnosticSettingsOperations
from .operations import DiagnosticSettingsCategoryOperations
from .operations import ActionGroupsOperations
from .operations import ActivityLogAlertsOperations
from .operations import ActivityLogsOperations
from .operations import EventCategoriesOperations
from .operations import TenantActivityLogsOperations
from .operations import MetricDefinitionsOperations
from .operations import MetricsOperations
from .operations import MetricBaselineOperations
from .operations import BaselinesOperations
from .operations import MetricAlertsOperations
from .operations import MetricAlertsStatusOperations
from .operations import ScheduledQueryRulesOperations
from .operations import MetricNamespacesOperations
from .operations import VMInsightsOperations
from . import models


class MonitorClient(object):
    """Monitor Management Client.

    :ivar autoscale_settings: AutoscaleSettingsOperations operations
    :vartype autoscale_settings: monitor_client.operations.AutoscaleSettingsOperations
    :ivar operations: Operations operations
    :vartype operations: monitor_client.operations.Operations
    :ivar alert_rule_incidents: AlertRuleIncidentsOperations operations
    :vartype alert_rule_incidents: monitor_client.operations.AlertRuleIncidentsOperations
    :ivar alert_rules: AlertRulesOperations operations
    :vartype alert_rules: monitor_client.operations.AlertRulesOperations
    :ivar log_profiles: LogProfilesOperations operations
    :vartype log_profiles: monitor_client.operations.LogProfilesOperations
    :ivar diagnostic_settings: DiagnosticSettingsOperations operations
    :vartype diagnostic_settings: monitor_client.operations.DiagnosticSettingsOperations
    :ivar diagnostic_settings_category: DiagnosticSettingsCategoryOperations operations
    :vartype diagnostic_settings_category: monitor_client.operations.DiagnosticSettingsCategoryOperations
    :ivar action_groups: ActionGroupsOperations operations
    :vartype action_groups: monitor_client.operations.ActionGroupsOperations
    :ivar activity_log_alerts: ActivityLogAlertsOperations operations
    :vartype activity_log_alerts: monitor_client.operations.ActivityLogAlertsOperations
    :ivar activity_logs: ActivityLogsOperations operations
    :vartype activity_logs: monitor_client.operations.ActivityLogsOperations
    :ivar event_categories: EventCategoriesOperations operations
    :vartype event_categories: monitor_client.operations.EventCategoriesOperations
    :ivar tenant_activity_logs: TenantActivityLogsOperations operations
    :vartype tenant_activity_logs: monitor_client.operations.TenantActivityLogsOperations
    :ivar metric_definitions: MetricDefinitionsOperations operations
    :vartype metric_definitions: monitor_client.operations.MetricDefinitionsOperations
    :ivar metrics: MetricsOperations operations
    :vartype metrics: monitor_client.operations.MetricsOperations
    :ivar metric_baseline: MetricBaselineOperations operations
    :vartype metric_baseline: monitor_client.operations.MetricBaselineOperations
    :ivar baselines: BaselinesOperations operations
    :vartype baselines: monitor_client.operations.BaselinesOperations
    :ivar metric_alerts: MetricAlertsOperations operations
    :vartype metric_alerts: monitor_client.operations.MetricAlertsOperations
    :ivar metric_alerts_status: MetricAlertsStatusOperations operations
    :vartype metric_alerts_status: monitor_client.operations.MetricAlertsStatusOperations
    :ivar scheduled_query_rules: ScheduledQueryRulesOperations operations
    :vartype scheduled_query_rules: monitor_client.operations.ScheduledQueryRulesOperations
    :ivar metric_namespaces: MetricNamespacesOperations operations
    :vartype metric_namespaces: monitor_client.operations.MetricNamespacesOperations
    :ivar vm_insights: VMInsightsOperations operations
    :vartype vm_insights: monitor_client.operations.VMInsightsOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: azure.core.credentials.TokenCredential
    :param subscription_id: The Azure subscription Id.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        subscription_id,  # type: str
        base_url=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if not base_url:
            base_url = 'https://management.azure.com'
        self._config = MonitorClientConfiguration(credential, subscription_id, **kwargs)
        self._client = ARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.autoscale_settings = AutoscaleSettingsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.operations = Operations(
            self._client, self._config, self._serialize, self._deserialize)
        self.alert_rule_incidents = AlertRuleIncidentsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.alert_rules = AlertRulesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.log_profiles = LogProfilesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.diagnostic_settings = DiagnosticSettingsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.diagnostic_settings_category = DiagnosticSettingsCategoryOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.action_groups = ActionGroupsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.activity_log_alerts = ActivityLogAlertsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.activity_logs = ActivityLogsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.event_categories = EventCategoriesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.tenant_activity_logs = TenantActivityLogsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.metric_definitions = MetricDefinitionsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.metrics = MetricsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.metric_baseline = MetricBaselineOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.baselines = BaselinesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.metric_alerts = MetricAlertsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.metric_alerts_status = MetricAlertsStatusOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.scheduled_query_rules = ScheduledQueryRulesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.metric_namespaces = MetricNamespacesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.vm_insights = VMInsightsOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> MonitorClient
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
