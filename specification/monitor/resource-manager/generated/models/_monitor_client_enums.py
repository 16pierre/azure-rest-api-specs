# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum

class MetricStatisticType(str, Enum):
    """the metric statistic type. How the metrics from multiple instances are combined.
    """

    average = "Average"
    min = "Min"
    max = "Max"
    sum = "Sum"

class TimeAggregationType(str, Enum):
    """time aggregation type. How the data that is collected should be combined over time. The default
    value is Average.
    """

    average = "Average"
    minimum = "Minimum"
    maximum = "Maximum"
    total = "Total"
    count = "Count"
    last = "Last"

class ComparisonOperationType(str, Enum):
    """the operator that is used to compare the metric data and the threshold.
    """

    equals = "Equals"
    not_equals = "NotEquals"
    greater_than = "GreaterThan"
    greater_than_or_equal = "GreaterThanOrEqual"
    less_than = "LessThan"
    less_than_or_equal = "LessThanOrEqual"

class ScaleDirection(str, Enum):
    """the scale direction. Whether the scaling action increases or decreases the number of instances.
    """

    none = "None"
    increase = "Increase"
    decrease = "Decrease"

class ScaleType(str, Enum):
    """the type of action that should occur when the scale rule fires.
    """

    change_count = "ChangeCount"
    percent_change_count = "PercentChangeCount"
    exact_count = "ExactCount"

class RecurrenceFrequency(str, Enum):
    """the recurrence frequency. How often the schedule profile should take effect. This value must be
    Week, meaning each week will have the same set of profiles. For example, to set a daily
    schedule, set **schedule** to every day of the week. The frequency property specifies that the
    schedule is repeated weekly.
    """

    none = "None"
    second = "Second"
    minute = "Minute"
    hour = "Hour"
    day = "Day"
    week = "Week"
    month = "Month"
    year = "Year"

class CategoryType(str, Enum):
    """The type of the diagnostic settings category.
    """

    metrics = "Metrics"
    logs = "Logs"

class ReceiverStatus(str, Enum):
    """Indicates the status of the receiver. Receivers that are not Enabled will not receive any
    communications.
    """

    not_specified = "NotSpecified"
    enabled = "Enabled"
    disabled = "Disabled"

class EventLevel(str, Enum):
    """the event level
    """

    critical = "Critical"
    error = "Error"
    warning = "Warning"
    informational = "Informational"
    verbose = "Verbose"

class AggregationType(str, Enum):
    """the aggregation type of the metric.
    """

    none = "None"
    average = "Average"
    count = "Count"
    minimum = "Minimum"
    maximum = "Maximum"
    total = "Total"

class Unit(str, Enum):
    """the unit of the metric.
    """

    count = "Count"
    bytes = "Bytes"
    seconds = "Seconds"
    count_per_second = "CountPerSecond"
    bytes_per_second = "BytesPerSecond"
    percent = "Percent"
    milli_seconds = "MilliSeconds"
    byte_seconds = "ByteSeconds"
    unspecified = "Unspecified"
    cores = "Cores"
    milli_cores = "MilliCores"
    nano_cores = "NanoCores"
    bits_per_second = "BitsPerSecond"

class Sensitivity(str, Enum):
    """the sensitivity of the baseline.
    """

    low = "Low"
    medium = "Medium"
    high = "High"

class BaselineSensitivity(str, Enum):
    """the sensitivity of the baseline.
    """

    low = "Low"
    medium = "Medium"
    high = "High"

class Odatatype(str, Enum):
    """specifies the type of the alert criteria.
    """

    microsoft_azure_monitor_single_resource_multiple_metric_criteria = "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
    microsoft_azure_monitor_multiple_resource_multiple_metric_criteria = "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
    microsoft_azure_monitor_webtest_location_availability_criteria = "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria"

class Enabled(str, Enum):
    """The flag which indicates whether the Log Search rule is enabled. Value should be true or false
    """

    true = "true"
    false = "false"

class ProvisioningState(str, Enum):
    """Provisioning state of the scheduled query rule
    """

    succeeded = "Succeeded"
    deploying = "Deploying"
    canceled = "Canceled"
    failed = "Failed"

class Operator(str, Enum):
    """the criteria operator.
    """

    equals = "Equals"
    not_equals = "NotEquals"
    greater_than = "GreaterThan"
    greater_than_or_equal = "GreaterThanOrEqual"
    less_than = "LessThan"
    less_than_or_equal = "LessThanOrEqual"
    include = "Include"

class CriterionType(str, Enum):
    """Specifies the type of threshold criteria
    """

    static_threshold_criterion = "StaticThresholdCriterion"
    dynamic_threshold_criterion = "DynamicThresholdCriterion"

class OnboardingStatus(str, Enum):
    """The onboarding status for the resource. Note that, a higher level scope, e.g., resource group
    or subscription, is considered onboarded if at least one resource under it is onboarded.
    """

    onboarded = "onboarded"
    not_onboarded = "notOnboarded"
    unknown = "unknown"

class DataStatus(str, Enum):
    """The status of VM Insights data from the resource. When reported as ``present`` the data array
    will contain information about the data containers to which data for the specified resource is
    being routed.
    """

    present = "present"
    not_present = "notPresent"

class DynamicThresholdOperator(str, Enum):
    """The operator used to compare the metric value against the threshold.
    """

    greater_than = "GreaterThan"
    less_than = "LessThan"
    greater_or_less_than = "GreaterOrLessThan"

class DynamicThresholdSensitivity(str, Enum):
    """The extent of deviation required to trigger an alert. This will affect how tight the threshold
    is to the metric series pattern.
    """

    low = "Low"
    medium = "Medium"
    high = "High"

class ConditionalOperator(str, Enum):
    """Result Condition Evaluation criteria. Supported Values - 'GreaterThan' or 'LessThan' or
    'Equal'.
    """

    greater_than = "GreaterThan"
    less_than = "LessThan"
    equal = "Equal"

class MetricTriggerType(str, Enum):
    """Metric Trigger Evaluation Type
    """

    consecutive = "Consecutive"
    total = "Total"

class AlertSeverity(str, Enum):
    """Severity Level of Alert
    """

    zero = "0"
    one = "1"
    two = "2"
    three = "3"
    four = "4"

class ConditionOperator(str, Enum):
    """Operators allowed in the rule condition.
    """

    greater_than = "GreaterThan"
    greater_than_or_equal = "GreaterThanOrEqual"
    less_than = "LessThan"
    less_than_or_equal = "LessThanOrEqual"

class TimeAggregationOperator(str, Enum):
    """Aggregation operators allowed in a rule.
    """

    average = "Average"
    minimum = "Minimum"
    maximum = "Maximum"
    total = "Total"
    last = "Last"

class ResultType(str, Enum):

    data = "Data"
    metadata = "Metadata"
